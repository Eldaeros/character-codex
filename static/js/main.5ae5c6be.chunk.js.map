{"version":3,"sources":["serviceWorker.ts","theme.js","components/mist/CharacterTheme.tsx","components/mist/Sheet.tsx","components/mist/DataController.tsx","components/mist/SheetController.tsx","components/AppBar.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","createMuiTheme","palette","type","primary","blueGrey","CharacterTheme","state","cardSide","Grid","item","xs","sm","lg","Card","elevation","style","backgroundColor","minHeight","CustomCardHeader","padding","theme","spacing","avatar","Avatar","aria-label","this","props","substring","action","IconButton","size","MoreVert","title","name","subheader","ThemeSummaryPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","fontSize","color","ExpansionPanelDetails","variant","CardContent","margin","height","display","flexDirection","List","dense","flex","powers","Object","keys","map","key","weaknesses","length","tag","letter","onClick","Divider","improvements","Component","styled","other","column","ExpansionPanel","Tag","ListItem","ListItemAvatar","ListItemText","Button","div","CardHeader","Sheet","CharacterSheet","container","direction","justify","alignItems","character","themes","values","index","unflatten","require","creds","url","sheetId","apiKey","_","SheetController","callback","data","setState","characters","fetch","then","response","json","batchColumnValues","valueRanges","columns","i","columnObject","j","push","error","console","log","content","playerName","findIndex","player","toLowerCase","displayName","charAt","toUpperCase","slice","ErrorBlock","ButtonAppBar","side","React","useState","top","left","bottom","right","toggleDrawer","open","event","AppBar","position","Toolbar","Menu","Drawer","onClose","role","onKeyDown","CharacterRoute","parsed","parse","search","App","basename","Paper","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ae5c6be.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blueGrey } from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: blueGrey,\n      },\n});\n","import React, { FunctionComponent, Component } from \"react\";\nimport styled from \"styled-components\";\nimport {\n    CardHeader,\n    Card,\n    Divider,\n    Typography,\n    CardContent,\n    IconButton,\n    Avatar,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Button,\n    ExpansionPanel,\n    ExpansionPanelSummary,\n    ExpansionPanelDetails,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreVertIcon } from \"@material-ui/icons\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nimport theme from \"../../theme\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\n\nexport interface ThemeProps {\n    name?: string;\n    type?: MythosTheme | LogosTheme;\n    powers?: any;\n    weaknesses?: any;\n    improvements?: string[];\n    column: number;\n}\ninterface ThemeState {\n    cardSide: \"front\" | \"back\";\n}\nexport interface CharacterTag {\n    [key: string]: string;\n}\n\nexport type MythosTheme =\n    | \"Adaptation\"\n    | \"Bastion\"\n    | \"Conjuration\"\n    | \"Destiny\"\n    | \"Divination\"\n    | \"Expression\"\n    | \"Familiar\"\n    | \"Mobility\"\n    | \"Relic\"\n    | \"Subversion\";\nexport type LogosTheme =\n    | \"Defining Event\"\n    | \"Defining Relationship\"\n    | \"Mission\"\n    | \"Personality\"\n    | \"Possessions\"\n    | \"Routine\"\n    | \"Training\"\n    | \"Turf\";\n\nexport class CharacterTheme extends Component<ThemeProps, ThemeState> {\n    state: ThemeState = {\n        cardSide: \"front\",\n    };\n\n    render() {\n        const dense = true;\n        const showSecondary = false;\n        return (\n            <Grid item xs={12} sm={6} lg={3}>\n                <Card\n                    elevation={2}\n                    style={{ backgroundColor: \"#333\", minHeight: \"400px\" }}\n                >\n                    <Card elevation={3}>\n                    <CustomCardHeader\n                        style={{ padding: theme.spacing(2, 3) }}\n                        avatar={\n                            <Avatar aria-label=\"theme\">\n                                {this.props.type &&\n                                    this.props.type.substring(0, 1)}\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"edit\" size=\"small\">\n                                <MoreVertIcon />\n                            </IconButton>\n                        }\n                        title={this.props.name}\n                        subheader={this.props.type}\n                    />\n                    </Card>\n                    <ThemeSummaryPanel>\n                        <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        >\n                        <Typography style={{fontSize: \"0.875rem\", color: \"rgba(255, 255, 255, 0.7)\"}}>Theme Summary</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                        <div>\n                            <Typography variant=\"subtitle2\">Mystery</Typography>\n                            <Typography variant=\"body2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.</Typography><br/>\n                            <Typography variant=\"subtitle2\">Identity</Typography>\n                            <Typography variant=\"body2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.</Typography>\n                        </div>\n                        </ExpansionPanelDetails>\n                    </ThemeSummaryPanel>\n                    <CardContent\n                        style={{ margin: theme.spacing(1, 0), height: \"100%\" }}\n                    >\n                        <div style={{display: \"flex\", flexDirection: \"column\", height: \"calc(100% - 152px)\"}} >\n                        <List dense={dense} style={{flex: \"1 1 auto\"}}>\n                            {this.props.powers &&\n                                Object.keys(this.props.powers).map(\n                                    (key: string) => {\n                                        if (\n                                            this.props.weaknesses &&\n                                            this.props.powers[key].length > 0\n                                        ) {\n                                            return (\n                                                <Tag\n                                                    key={key}\n                                                    tag={\n                                                        this.props.powers &&\n                                                        this.props.powers[key]\n                                                    }\n                                                    letter={key}\n                                                    onClick={() => {\n                                                        // Do something\n                                                    }}\n                                                />\n                                            );\n                                        }\n                                    },\n                                )}\n                        </List>\n                        <Divider\n                            variant={\"middle\"}\n                            style={{ margin: theme.spacing(1, 0) }}\n                        />\n                        <List dense={dense}>\n                            {this.props.weaknesses &&\n                                Object.keys(this.props.weaknesses).map(\n                                    (key: string) => {\n                                        if (\n                                            this.props.weaknesses &&\n                                            this.props.weaknesses[key].length >\n                                                0\n                                        ) {\n                                            return (\n                                                <Tag\n                                                    key={key}\n                                                    tag={\n                                                        this.props.weaknesses &&\n                                                        this.props.weaknesses[\n                                                            key\n                                                        ]\n                                                    }\n                                                    letter={key}\n                                                />\n                                            );\n                                        }\n                                    },\n                                )}\n                        </List>\n                        <Typography>{this.props.improvements}</Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </Grid>\n        );\n    }\n}\ninterface CharacterThemeContainerProps {\n    column: number;\n}\nconst CharacterThemeContainer = styled(({ elevation, ...other }) => (\n    <Card elevation={elevation} {...other} />\n))`\n    grid-column-start: ${(props: CharacterThemeContainerProps) =>\n        props.column + 1};\n    grid-row-start: 2;\n    display: grid;\n    grid-template-rows: 50px 2fr 1fr 100px;\n`;\n\nconst ThemeSummaryPanel = styled(ExpansionPanel)`\n    &.MuiExpansionPanel-root.Mui-expanded {\n        margin-top: 0px;\n    }\n\n    &.MuiExpansionPanel-root.Mui-expanded::before {\n        opacity: 1\n    }\n`\n\ninterface TagProps {\n    letter: string;\n    tag: string;\n    burned?: boolean;\n    onClick?: () => void;\n}\nconst Tag: FunctionComponent<TagProps> = (props: TagProps) => {\n    return (\n        <ListItem>\n            <ListItemAvatar style={{ color: \"#757575\" }}>\n                <span>{props.letter}</span>\n            </ListItemAvatar>\n            <ListItemText primary={props.tag} />\n            {props.onClick && (\n                <Button>\n                    <WhatshotIcon />\n                </Button>\n            )}\n        </ListItem>\n    );\n};\nconst TagLayout = styled.div`\n    display: grid\n    grid-template-columns: 20px 1fr 20px;\n    grid-column-gap: 5px;\n    height: 20px;\n`;\n\nconst CustomCardHeader = styled(CardHeader)`\n    && {\n        > .MuiCardHeader-action {\n            margin: 0px;\n            align-self: center;\n        }\n    }\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { CharacterTheme } from \"./CharacterTheme\";\nimport styled from \"styled-components\";\nimport { CharacterData } from \"./DataController\";\nimport { Grid } from \"@material-ui/core\";\n\ninterface Props {\n    character: CharacterData;\n}\n\nexport const Sheet: FunctionComponent<Props> = (props: Props) => {\n    return (\n        <CharacterSheet>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            {props.character.themes &&\n                Object.values(props.character.themes).map((theme, index) => {\n                    return (\n                        <CharacterTheme\n                            column={index + 1}\n                            key={index}\n                            name={theme.name}\n                            type={theme.type}\n                            powers={theme.powers}\n                            weaknesses={theme.weaknesses}\n                        />\n                    );\n                })}\n        </Grid>\n        </CharacterSheet>\n    );\n};\n\nexport const CharacterSheet = styled.div`\n    padding: 8px;\n`;","import { ThemeProps } from \"./CharacterTheme.js\";\n\nconst unflatten = require(\"unflatten\");\n\ntype Creds = typeof import(\"../../creds.json\");\nconst creds: Creds = require(\"../../creds.json\");\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${creds.sheetId}/values:batchGet?ranges=Data!G1:O92&majorDimension=COLUMNS&key=${creds.apiKey}`;\n\ntype CharacterDataSchema = typeof import(\"../../assets/characterSchema.json\");\nexport interface CharacterData {\n    name?: string;\n    player: string;\n    mythos?: string;\n    logos?: string;\n    themes?: ThemeProps[];\n}\n\nexport const fetchData = (callback: (data: CharacterData[]) => void) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(\n            (data: any) => {\n                const batchColumnValues = data.valueRanges[0].values;\n\n                // Get Data\n                const columns: CharacterDataSchema[] = [];\n                for (let i = 1; i < batchColumnValues.length; i++) {\n                    let columnObject: any = {};\n                    for (let j = 0; j < batchColumnValues[i].length; j++) {\n                        columnObject[`${batchColumnValues[0][j]}`] =\n                            batchColumnValues[i][j];\n                    }\n                    columns.push(columnObject);\n                }\n\n                const characters: CharacterData[] = columns.map((column: any) => {\n                    return unflatten(column);\n                })\n\n                callback(characters);\n            },\n            (error: any) => {\n                console.log(\"error: \", error); // XX\n            },\n        );\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Sheet } from \"./Sheet\";\nimport { fetchData, CharacterData } from \"./DataController\";\nimport { Card, CardContent } from \"@material-ui/core\";\n\nconst _ = require(\"lodash\");\n\ninterface Props {\n    playerName?: string;\n}\n\ninterface State {\n    characters?: CharacterData[];\n}\n\nexport class SheetController extends Component<Props, State> {\n    state: State = {};\n\n    componentDidMount() {\n        fetchData(data => {\n            return this.setState({\n                characters: data,\n            });\n        });\n    }\n\n    render() {\n        let content: JSX.Element = <div></div>;\n        if (!this.props.playerName) {\n            content = (\n                <ErrorBlock>\n                    <CardContent>Please provide a player name</CardContent>\n                </ErrorBlock>\n            );\n        } else if (this.state.characters) {\n            let character: CharacterData | undefined;\n            const index = _.findIndex(\n                this.state.characters,\n                (character: CharacterData) => {\n                    return (\n                        character.player.toLowerCase() === (this.props.playerName && this.props.playerName.toLowerCase())\n                    );\n                },\n            );\n\n            character = this.state.characters[index];\n            if (character) {\n                content = <Sheet character={character} />;\n            } else {\n                const name = this.props.playerName;\n                const displayName =\n                    name.charAt(0).toUpperCase() + name.slice(1);\n                content = (\n                    <ErrorBlock>\n                        <CardContent>\n                            Player '{displayName}' not found.\n                        </CardContent>\n                    </ErrorBlock>\n                );\n            }\n        }\n\n        return <>{content}</>;\n    }\n}\n\nconst ErrorBlock = styled(Card)`\n    /* grid-row-start: 1;\n    grid-column-start: 3;\n    grid-column-end: 5; */\n    align-self: center;\n    justify-self: center;\n`;\n","import React from \"react\";\nimport { Menu as MenuIcon } from '@material-ui/icons';\n\n\nimport {\n    Toolbar,\n    IconButton,\n    Typography,\n    Button,\n    AppBar,\n    Drawer,\n    List,\n    ListItemIcon,\n    ListItem,\n    ListItemText,\n    Divider,\n} from \"@material-ui/core\";\n\nexport default function ButtonAppBar() {\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (side: string, open: boolean) => (event: any) => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [side]: open });\n    };\n\n    const sideList = (side: string) => (\n        <div\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        >\n\n        </div>\n    );\n\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"primary\">\n                <Toolbar>\n                    <Button onClick={toggleDrawer(\"left\", true)}><MenuIcon /></Button>\n                    <Drawer\n                        open={state.left}\n                        onClose={toggleDrawer(\"left\", false)}\n                    >\n                        {sideList(\"left\")}\n                    </Drawer>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\n// const NavigationBar = styled(App)\n","import React from \"react\";\nimport \"./App.css\";\nimport { SheetController } from \"./components/mist/SheetController\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport theme from \"./theme\";\nimport ButtonAppBar from \"./components/AppBar\";\nimport styled from \"styled-components\";\nimport { Paper } from \"@material-ui/core\";\n\nconst App: React.FC = () => {\n    return (\n        <Router basename={\"/\"}>\n            <MuiThemeProvider theme={theme}>\n                <Paper elevation={0} style={{backgroundColor: \"#212121\", minHeight: \"100vh\"}}>\n                    <ButtonAppBar />\n                    <Route\n                        path={`/character-codex/`}\n                        render={props => <CharacterRoute {...props} />}\n                    />\n                </Paper>\n            </MuiThemeProvider>\n        </Router>\n    );\n};\n\nfunction CharacterRoute(props: any) {\n    const queryString = require(\"query-string\");\n    var parsed = queryString.parse(props.location.search);\n    return <SheetController playerName={parsed.name} />;\n}\n\nconst Background = styled.div`\n    /* background-color: #121212; */\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}