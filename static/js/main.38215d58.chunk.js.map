{"version":3,"sources":["serviceWorker.ts","theme.js","components/mist/CharacterTheme.tsx","components/mist/Sheet.tsx","components/mist/DataController.tsx","components/mist/SheetController.tsx","components/AppBar.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","createMuiTheme","palette","type","primary","blueGrey","CharacterTheme","state","cardSide","CharacterThemeContainer","column","this","props","elevation","style","backgroundColor","CustomCardHeader","padding","theme","spacing","avatar","Avatar","aria-label","substring","action","IconButton","size","MoreVert","title","name","subheader","CardContent","margin","Typography","variant","color","component","powers","map","tag","key","Object","keys","letter","Divider","weaknesses","improvements","Component","styled","other","Card","Tag","TagLayout","div","CardHeader","Sheet","values","character","themes","index","CharacterSheet","_","require","flow","pr","partialRight","spread","merge","creds","url","sheetId","apiKey","getTags","value","tagStrings","split","reduce","memo","tagString","trim","push","SheetController","callback","data","setState","characters","fetch","then","response","json","batchRowValues","valueRanges","rows","i","length","rowObject","j","row","attribute","includes","themeIndex","themeKey","parse","content","playerName","findIndex","player","toLowerCase","displayName","charAt","toUpperCase","slice","ErrorBlock","ButtonAppBar","side","React","useState","top","left","bottom","right","toggleDrawer","open","event","AppBar","position","Toolbar","Button","onClick","Menu","Drawer","onClose","role","onKeyDown","List","text","ListItem","button","ListItemIcon","ListItemText","CharacterRoute","parsed","search","App","basename","Paper","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+KAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mKCfSC,cAAe,CAC1BC,QAAS,CACLC,KAAM,OACNC,QAASC,O,ijBC+CV,IAAMC,EAAb,2MACIC,MAAoB,CAChBC,SAAU,SAFlB,wEAMQ,OACI,kBAACC,EAAD,CACIC,OAAQC,KAAKC,MAAMF,OACnBG,UAAW,EACXC,MAAO,CAAEC,gBAAiB,SAE1B,kBAACC,EAAD,CACIF,MAAO,CAAEG,QAASC,EAAMC,QAAQ,EAAG,IACnCC,OACI,kBAACC,EAAA,EAAD,CAAQC,aAAW,SACdX,KAAKC,MAAMT,KAAKoB,UAAU,EAAG,IAGtCC,OACI,kBAACC,EAAA,EAAD,CAAYH,aAAW,OAAOI,KAAK,SAC/B,kBAACC,EAAA,EAAD,OAGRC,MAAOjB,KAAKC,MAAMiB,KAClBC,UAAWnB,KAAKC,MAAMT,OAE1B,kBAAC4B,EAAA,EAAD,CAAajB,MAAO,CAAEkB,OAAQd,EAAMC,QAAQ,EAAG,KAE3C,kBAACc,EAAA,EAAD,CACIC,QAAQ,QACRC,MAAM,cACNC,UAAU,KAETzB,KAAKC,MAAMyB,OAAOC,IAAI,SAACC,GACpB,IAAMC,EAAMC,OAAOC,KAAKH,GAAK,GAC7B,OACI,kBAAC,EAAD,CAAKC,IAAKA,EAAKG,OAAQH,EAAKD,IAAKA,EAAIC,QAIjD,kBAACI,EAAA,EAAD,CACIV,QAAS,SACTpB,MAAO,CAAEkB,OAAQd,EAAMC,QAAQ,EAAG,MAEtC,kBAACc,EAAA,EAAD,CACIC,QAAQ,QACRC,MAAM,gBACNC,UAAU,KAETzB,KAAKC,MAAMiC,WAAWP,IAAI,SAACC,GACxB,IAAMC,EAAMC,OAAOC,KAAKH,GAAK,GAC7B,OACI,kBAAC,EAAD,CAAKC,IAAKA,EAAKG,OAAQH,EAAKD,IAAKA,EAAIC,QAIjD,kBAACP,EAAA,EAAD,KAAatB,KAAKC,MAAMkC,oBAzD5C,GAAoCC,aAkE9BtC,EAA0BuC,YAAO,gBAAGnC,EAAH,EAAGA,UAAcoC,EAAjB,oCACnC,kBAACC,EAAA,EAAD,eAAMrC,UAAWA,GAAeoC,KADJD,CAAH,IAGJ,SAACpC,GAAD,OACjBA,EAAMF,OAAS,IAWjByC,EAAmC,SAACvC,GACtC,OACI,kBAACwC,EAAD,KACI,6BAAMxC,EAAM+B,QACZ,6BAAM/B,EAAM2B,KACZ,gCAINa,EAAYJ,IAAOK,IAAV,KAOTrC,EAAmBgC,YAAOM,IAAPN,CAAH,K,sPC7If,IAAMO,EAAkC,SAAC3C,GAC5C,OACI,oCACK6B,OAAOe,OAAO5C,EAAM6C,UAAUC,QAAQpB,IAAI,SAACpB,EAAOyC,GAC/C,OACI,kBAAC,EAAD,CACIjD,OAAQiD,EAAQ,EAChBnB,IAAKmB,EACL9B,KAAMX,EAAMW,KACZ1B,KAAMe,EAAMf,KACZkC,OAAQnB,EAAMmB,OACdQ,WAAY3B,EAAM2B,iBAQ7Be,EAAiBZ,IAAOK,IAAV,K,QC1BrBQ,EAAIC,EAAQ,IACVC,EAA+CF,EAA/CE,KAAMzB,EAAyCuB,EAAzCvB,IAAmB0B,EAAsBH,EAApCI,aAAkBC,EAAkBL,EAAlBK,OAAQC,EAAUN,EAAVM,MAGvCC,EAAeN,EAAQ,IACvBO,EAAG,wDAAoDD,EAAME,QAA1D,gEAAyHF,EAAMG,QAoE3HC,EAAU,SAACC,GACpB,IAAMC,EAAuBD,EAAME,MAAM,KAUzC,OADAF,EARWC,EAAWE,OAAO,SAACC,EAAsBC,GAChD,IAAMnC,EAAiBmC,EAAUH,MAAM,KAAK,GAAGI,OACzCxC,EAAcuC,EAAUH,MAAM,KAAK,GAIzC,MAHe,KAAXhC,GACAkC,EAAKG,KAAL,eAAarC,EAASJ,IAEnBsC,GACR,K,uMC9EP,IAAMhB,EAAIC,EAAQ,IAULmB,EAAb,2MACI1E,MAAe,GADnB,mFAGyB,IDDC2E,ECCF,ODDEA,ECER,SAAAC,GACN,OAAO,EAAKC,SAAS,CACjBC,WAAYF,KDHxBG,MAAMjB,GACDkB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAJ,GAKF,IAJA,IAAMO,EAAiBP,EAAKQ,YAAY,GAAGnC,OAGrCoC,EAA8B,GAC3BC,EAAI,EAAGA,EAAIH,EAAeI,OAAQD,IAAK,CAE5C,IADA,IAAIE,EAAiB,GACZC,EAAI,EAAGA,EAAIN,EAAeG,GAAGC,OAAQE,IAC1CD,EAAUL,EAAe,GAAGM,IAAMN,EAAeG,GAAGG,GAExDJ,EAAKZ,KAAKe,GAId,IAAMV,EAAaO,EAAKtD,IAAI,SAAC2D,GAiCzB,OAhCclC,EACVC,EAAG1B,EAAK,SAACmC,EAAYjC,GACjB,IAAI0D,EAAY1D,EAAImC,MAAM,MAAM,GAEhC,GAAKnC,EAAI2D,SAAS,UAIX,CACHD,EAAY,SACZ,IAAME,EAAa5D,EAAImC,MAAM,MAAM,GAC7B0B,EAAW7D,EAAImC,MAAM,MAAM,GAQjC,OANInC,EAAI2D,SAAS,WACb3D,EAAI2D,SAAS,iBAEb1B,EAAQD,EAAQC,IAGb,eACFyB,EADL,eAESE,EAFT,eAGaC,EAAW5B,KAjBxB,OAAO,eACFyB,EAAYzB,KAsBzBP,EAAOC,GAEsBmC,CAAML,KAK3Cf,EAASG,OCvDrB,+BAWc,IAAD,OACDkB,EAAuB,8BAC3B,GAAK5F,KAAKC,MAAM4F,YAMT,GAAI7F,KAAKJ,MAAM8E,WAAY,CAC9B,IAAI5B,EACEE,EAAQE,EAAE4C,UACZ9F,KAAKJ,MAAM8E,WACX,SAAC5B,GACG,OACIA,EAAUiD,OAAOC,gBAAkB,EAAK/F,MAAM4F,aAM1D,GADA/C,EAAY9C,KAAKJ,MAAM8E,WAAW1B,GAE9B4C,EAAU,kBAAC,EAAD,CAAO9C,UAAWA,QACzB,CACH,IAAM5B,EAAOlB,KAAKC,MAAM4F,WAClBI,EACF/E,EAAKgF,OAAO,GAAGC,cAAgBjF,EAAKkF,MAAM,GAC9CR,EACI,kBAACS,EAAD,KACI,kBAACjF,EAAA,EAAD,gBACa6E,EADb,gBAEe,YA3B3BL,EACI,kBAACS,EAAD,KACI,kBAACjF,EAAA,EAAD,sCA+BZ,OAAO,kBAAC6B,EAAD,KAAiB2C,OA/ChC,GAAqCxD,aAmD/BiE,EAAahE,YAAOE,IAAPF,CAAH,K,kWCjDD,SAASiE,KAAgB,IAmBlBC,EAnBiB,EACTC,IAAMC,SAAS,CACrCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IALwB,oBAC5BjH,EAD4B,KACrB6E,EADqB,KAQ7BqC,EAAe,SAACP,EAAcQ,GAAf,OAAiC,SAACC,IAEhC,YAAfA,EAAMxH,MACS,QAAdwH,EAAMnF,KAA+B,UAAdmF,EAAMnF,MAKlC4C,E,uVAAS,CAAD,GAAM7E,EAAN,eAAc2G,EAAOQ,OAmCjC,OACI,6BACI,kBAACE,GAAA,EAAD,CAAQC,SAAS,SAAS1F,MAAM,WAC5B,kBAAC2F,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QAASP,EAAa,QAAQ,IAAO,kBAACQ,GAAA,EAAD,OAC7C,kBAACC,GAAA,EAAD,CACIR,KAAMnH,EAAM+G,KACZa,QAASV,EAAa,QAAQ,KAvChCP,EAyCY,OAxC1B,yBACIkB,KAAK,eACLJ,QAASP,EAAaP,GAAM,GAC5BmB,UAAWZ,EAAaP,GAAM,IAE9B,kBAACoB,GAAA,EAAD,KACK,CAAC,QAAS,UAAW,aAAc,UAAUhG,IAC1C,SAACiG,EAAM5E,GAAP,OACI,kBAAC6E,GAAA,EAAD,CAAUC,QAAM,EAACjG,IAAK+F,GAClB,kBAACG,GAAA,EAAD,KACI,6BAAM/E,IAEV,kBAACgF,GAAA,EAAD,CAAcvI,QAASmI,QAKvC,kBAAC3F,EAAA,EAAD,MACA,kBAAC0F,GAAA,EAAD,KACK,CAAC,WAAY,QAAS,QAAQhG,IAAI,SAACiG,EAAM5E,GAAP,OAC/B,kBAAC6E,GAAA,EAAD,CAAUC,QAAM,EAACjG,IAAK+F,GAClB,kBAACG,GAAA,EAAD,KACI,kBAACT,GAAA,EAAD,OAEJ,kBAACU,GAAA,EAAD,CAAcvI,QAASmI,c,4HCpC/C,SAASK,GAAehI,GACpB,IACIiI,EADgB/E,EAAQ,IACHwC,MAAM1F,EAAMd,SAASgJ,QAC9C,OAAO,kBAAC,EAAD,CAAiBtC,WAAYqC,EAAOhH,OAG5BmB,IAAOK,IAAV,MAAhB,IAIe0F,GA1BO,WAClB,OACI,kBAAC,IAAD,CAAQC,SAAU,KACd,kBAAC,KAAD,CAAkB9H,MAAOA,GACrB,kBAAC+H,GAAA,EAAD,CAAOpI,UAAW,EAAGC,MAAO,CAACC,gBAAiB,YAC1C,kBAACkG,GAAD,MACA,kBAAC,IAAD,CACIiC,KAAI,oBACJC,OAAQ,SAAAvI,GAAK,OAAI,kBAACgI,GAAmBhI,UCZ7DwI,IAASD,OACL,kBAAC,GAAD,MACAE,SAASC,eAAe,SRiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC,gB","file":"static/js/main.38215d58.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blueGrey } from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: blueGrey,\n      },\n});\n","import React, { FunctionComponent, Component } from \"react\";\nimport styled from \"styled-components\";\nimport {\n    CardHeader,\n    Card,\n    Divider,\n    Typography,\n    CardContent,\n    IconButton,\n    Avatar,\n    makeStyles,\n    createStyles,\n    Theme,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreVertIcon } from \"@material-ui/icons\";\nimport theme from \"../../theme\";\n\nexport interface ThemeProps {\n    name: string;\n    type: MythosTheme | LogosTheme;\n    powers: CharacterTag[];\n    weaknesses: CharacterTag[];\n    improvements?: string[];\n    column: number;\n}\ninterface ThemeState {\n    cardSide: \"front\" | \"back\";\n}\nexport interface CharacterTag {\n    [key: string]: string;\n}\n\nexport type MythosTheme =\n    | \"Adaptation\"\n    | \"Bastion\"\n    | \"Conjuration\"\n    | \"Destiny\"\n    | \"Divination\"\n    | \"Expression\"\n    | \"Familiar\"\n    | \"Mobility\"\n    | \"Relic\"\n    | \"Subversion\";\nexport type LogosTheme =\n    | \"Defining Event\"\n    | \"Defining Relationship\"\n    | \"Mission\"\n    | \"Personality\"\n    | \"Possessions\"\n    | \"Routine\"\n    | \"Training\"\n    | \"Turf\";\n\nexport class CharacterTheme extends Component<ThemeProps, ThemeState> {\n    state: ThemeState = {\n        cardSide: \"front\",\n    };\n\n    render() {\n        return (\n            <CharacterThemeContainer\n                column={this.props.column}\n                elevation={2}\n                style={{ backgroundColor: \"#333\" }}\n            >\n                <CustomCardHeader\n                    style={{ padding: theme.spacing(5, 2) }}\n                    avatar={\n                        <Avatar aria-label=\"theme\">\n                            {this.props.type.substring(0, 1)}\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"edit\" size=\"small\">\n                            <MoreVertIcon />\n                        </IconButton>\n                    }\n                    title={this.props.name}\n                    subheader={this.props.type}\n                />\n                <CardContent style={{ margin: theme.spacing(3, 0) }}>\n                    {/* Powers Section */}\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                        component=\"p\"\n                    >\n                        {this.props.powers.map((tag: CharacterTag) => {\n                            const key = Object.keys(tag)[0];\n                            return (\n                                <Tag key={key} letter={key} tag={tag[key]} />\n                            );\n                        })}\n                    </Typography>\n                    <Divider\n                        variant={\"middle\"}\n                        style={{ margin: theme.spacing(1, 0) }}\n                    />\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        {this.props.weaknesses.map((tag: CharacterTag) => {\n                            const key = Object.keys(tag)[0];\n                            return (\n                                <Tag key={key} letter={key} tag={tag[key]} />\n                            );\n                        })}\n                    </Typography>\n                    <Typography>{this.props.improvements}</Typography>\n                </CardContent>\n            </CharacterThemeContainer>\n        );\n    }\n}\ninterface CharacterThemeContainerProps {\n    column: number;\n}\nconst CharacterThemeContainer = styled(({ elevation, ...other }) => (\n    <Card elevation={elevation} {...other} />\n))`\n    grid-column-start: ${(props: CharacterThemeContainerProps) =>\n        props.column + 1};\n    grid-row-start: 2;\n    display: grid;\n    grid-template-rows: 50px 2fr 1fr 100px;\n`;\n\ninterface TagProps {\n    letter: string;\n    tag: string;\n    burned?: boolean;\n}\nconst Tag: FunctionComponent<TagProps> = (props: TagProps) => {\n    return (\n        <TagLayout>\n            <div>{props.letter}</div>\n            <div>{props.tag}</div>\n            <div></div>\n        </TagLayout>\n    );\n};\nconst TagLayout = styled.div`\n    display: grid\n    grid-template-columns: 20px 1fr 20px;\n    grid-column-gap: 5px;\n    height: 20px;\n`;\n\nconst CustomCardHeader = styled(CardHeader)`\n    && {\n        > .MuiCardHeader-action {\n            margin: 0px;\n            align-self: center;\n        }\n    }\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { CharacterTheme } from \"./CharacterTheme\";\nimport styled from \"styled-components\";\nimport { CharacterData } from \"./DataController\";\n\ninterface Props {\n    character: CharacterData;\n}\n\nexport const Sheet: FunctionComponent<Props> = (props: Props) => {\n    return (\n        <>\n            {Object.values(props.character.themes).map((theme, index) => {\n                return (\n                    <CharacterTheme\n                        column={index + 1}\n                        key={index}\n                        name={theme.name}\n                        type={theme.type}\n                        powers={theme.powers}\n                        weaknesses={theme.weaknesses}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\nexport const CharacterSheet = styled.div`\n    height: calc(100vh - 64px);\n    display: grid\n    grid-template-columns: 15px repeat(4, 1fr) 15px;\n    grid-template-rows: 100px 1fr 20px;\n    grid-column-gap: 10px;\n`;","import { ThemeProps, CharacterTag } from \"./CharacterTheme.js\";\n\nconst _ = require(\"lodash\");\nconst { flow, map, partialRight: pr, spread, merge } = _;\n\ntype Creds = typeof import(\"../../creds.json\");\nconst creds: Creds = require(\"../../creds.json\");\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${creds.sheetId}/values:batchGet?ranges=Data&majorDimension=ROWS&key=${creds.apiKey}`;\n\ntype CharacterDataSchema = typeof import(\"../../assets/characterSchema.json\");\nexport interface CharacterData {\n    name: string;\n    player: string;\n    mythos: string;\n    logos: string;\n    themes: ThemeProps[];\n}\n\nexport const fetchData = (callback: (data: CharacterData[]) => void) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            const batchRowValues = data.valueRanges[0].values;\n\n            // Get Data\n            const rows: CharacterDataSchema[] = [];\n            for (let i = 1; i < batchRowValues.length; i++) {\n                let rowObject: any = {};\n                for (let j = 0; j < batchRowValues[i].length; j++) {\n                    rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n                }\n                rows.push(rowObject);\n            }\n\n            // Parse Data\n            const characters = rows.map((row: CharacterDataSchema) => {\n                const parse = flow(\n                    pr(map, (value: any, key: string) => {\n                        let attribute = key.split(\"__\")[0];\n\n                        if (!key.includes(\"themes\")) {\n                            return {\n                                [attribute]: value,\n                            };\n                        } else {\n                            attribute = \"themes\";\n                            const themeIndex = key.split(\"__\")[1];\n                            const themeKey = key.split(\"__\")[2];\n                            if (\n                                key.includes(\"powers\") ||\n                                key.includes(\"weaknesses\")\n                            ) {\n                                value = getTags(value);\n                            }\n\n                            return {\n                                [attribute]: {\n                                    [themeIndex]: {\n                                        [themeKey]: value,\n                                    },\n                                },\n                            };\n                        }\n                    }),\n                    spread(merge),\n                );\n                const character: CharacterData = parse(row);\n\n                return character;\n            });\n\n            callback(characters);\n        });\n};\n\nexport const getTags = (value: any) => {\n    const tagStrings: string[] = value.split(\";\");\n    var tags = tagStrings.reduce((memo: CharacterTag[], tagString: string) => {\n        const letter: string = tagString.split(\":\")[0].trim();\n        const tag: string = tagString.split(\":\")[1];\n        if (letter !== \"\") {\n            memo.push({ [letter]: tag });\n        }\n        return memo;\n    }, []);\n    value = tags;\n    return value;\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Sheet, CharacterSheet } from \"./Sheet\";\nimport { fetchData, CharacterData } from \"./DataController\";\nimport { Card, CardContent } from \"@material-ui/core\";\n\nconst _ = require(\"lodash\");\n\ninterface Props {\n    playerName?: string;\n}\n\ninterface State {\n    characters?: CharacterData[];\n}\n\nexport class SheetController extends Component<Props, State> {\n    state: State = {};\n\n    componentDidMount() {\n        fetchData(data => {\n            return this.setState({\n                characters: data,\n            });\n        });\n    }\n\n    render() {\n        let content: JSX.Element = <div></div>;\n        if (!this.props.playerName) {\n            content = (\n                <ErrorBlock>\n                    <CardContent>Please provide a player name</CardContent>\n                </ErrorBlock>\n            );\n        } else if (this.state.characters) {\n            let character: CharacterData | undefined;\n            const index = _.findIndex(\n                this.state.characters,\n                (character: CharacterData) => {\n                    return (\n                        character.player.toLowerCase() === this.props.playerName\n                    );\n                },\n            );\n\n            character = this.state.characters[index];\n            if (character) {\n                content = <Sheet character={character} />;\n            } else {\n                const name = this.props.playerName;\n                const displayName =\n                    name.charAt(0).toUpperCase() + name.slice(1);\n                content = (\n                    <ErrorBlock>\n                        <CardContent>\n                            Player '{displayName}' not found.\n                        </CardContent>{\" \"}\n                    </ErrorBlock>\n                );\n            }\n        }\n\n        return <CharacterSheet>{content}</CharacterSheet>;\n    }\n}\n\nconst ErrorBlock = styled(Card)`\n    grid-row-start: 2;\n    grid-column-start: 3;\n    grid-column-end: 5;\n    align-self: center;\n    justify-self: center;\n`;\n","import React from \"react\";\nimport { Menu as MenuIcon } from '@material-ui/icons';\n\n\nimport {\n    Toolbar,\n    IconButton,\n    Typography,\n    Button,\n    AppBar,\n    Drawer,\n    List,\n    ListItemIcon,\n    ListItem,\n    ListItemText,\n    Divider,\n} from \"@material-ui/core\";\n\nexport default function ButtonAppBar() {\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (side: string, open: boolean) => (event: any) => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [side]: open });\n    };\n\n    const sideList = (side: string) => (\n        <div\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        >\n            <List>\n                {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(\n                    (text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>\n                                <div>{index}</div>\n                            </ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ),\n                )}\n            </List>\n            <Divider />\n            <List>\n                {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>\n                            <MenuIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"primary\">\n                <Toolbar>\n                    <Button onClick={toggleDrawer(\"left\", true)}><MenuIcon /></Button>\n                    <Drawer\n                        open={state.left}\n                        onClose={toggleDrawer(\"left\", false)}\n                    >\n                        {sideList(\"left\")}\n                    </Drawer>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\n// const NavigationBar = styled(App)\n","import React from \"react\";\nimport \"./App.css\";\nimport { SheetController } from \"./components/mist/SheetController\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport theme from \"./theme\";\nimport ButtonAppBar from \"./components/AppBar\";\nimport styled from \"styled-components\";\nimport { Paper } from \"@material-ui/core\";\n\nconst App: React.FC = () => {\n    return (\n        <Router basename={\"/\"}>\n            <MuiThemeProvider theme={theme}>\n                <Paper elevation={0} style={{backgroundColor: \"#212121\"}}>\n                    <ButtonAppBar />\n                    <Route\n                        path={`/character-codex/`}\n                        render={props => <CharacterRoute {...props} />}\n                    />\n                </Paper>\n            </MuiThemeProvider>\n        </Router>\n    );\n};\n\nfunction CharacterRoute(props: any) {\n    const queryString = require(\"query-string\");\n    var parsed = queryString.parse(props.location.search);\n    return <SheetController playerName={parsed.name} />;\n}\n\nconst Background = styled.div`\n    /* background-color: #121212; */\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}